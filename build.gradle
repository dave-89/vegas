buildscript {
	ext {
		springBootVersion = '1.5.4.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'cpp'

version = '0.1.0-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

task createLibsFolder(type:Exec) {
    commandLine 'mkdir', '-p', 'libs'
    ext.output = {
        return standardOutput.toString()
    }
}

task createBuildForCPP(type:Exec) {
    dependsOn createLibsFolder
    def newCPP = "${projectDir}/build/cpp"
    commandLine 'mkdir', '-p', newCPP
    ext.output = {
        return standardOutput.toString()
    }
}

task compileCPP(type:Exec) {
	dependsOn createBuildForCPP
	commandLine 'make'
	ext.output = {
		return standardOutput.toString()
	}
}

task addLibs(type: Copy) {
    dependsOn compileCPP
	from "${buildDir}/cpp/libBridgeServiceImpl.so"
	into 'libs'
    ext.output = {
        return standardOutput.toString()
    }
}

task deleteLibs(type: Delete) {
    delete 'libs'
}


test {
    jvmArgs += ['-Djava.library.path=./libs']
}

tasks.withType(JavaExec) {
    systemProperty "java.library.path", file("./libs")
}

build.dependsOn(addLibs)
clean.dependsOn(deleteLibs)
bootRun.dependsOn(build)
